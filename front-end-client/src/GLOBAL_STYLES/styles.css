/* styles.css */
/* default styles for all native html elements */

/* import aktiv-grotesk from Adobe */
@import url("https://use.typekit.net/ssy0pws.css");
:root {
  /* 
    The main color here is "--primary0"
    To achieve shades of "--primary0" use variables "--primaryA" - "--primaryD" 
    To achieve tints of "--primary0" use variables "--primary1" - "--primary4"
    This same system persists throughout this color system and is currently set to create a rectangular color sheme 
    */

  /* For color changes, these three parameters should solve 
    most of your problems. */
  --hueSubPrimary: 40; /* choose a number between 1 and 360 */
  --saturationSubPrimary: 100%; /* should not exceed 100% */
  --lightnessSubPrimary: 50%; /* should not exceed 100% */ /* initialize hsl color values: don't mess with these */

  /* don't mess with these */
  --hue: 0; /* 360 degrees */
  --saturation: 0%; /* greyscale or vivid */
  --lightness: 0%; /* light or dark */
  --huePrimary: calc(var(--hue) + var(--hueSubPrimary));
  --saturationPrimary: calc(var(--saturation) + var(--saturationSubPrimary));
  --lightnessPrimary: calc(var(--lightness) + var(--lightnessSubPrimary));
  /* calculate color values for primaryD - primary4 */
  --lightnessPrimaryD: calc((var(--lightnessSubPrimary) / 100) * 20);
  --lightnessPrimaryC: calc((var(--lightnessSubPrimary) / 100) * 40);
  --lightnessPrimaryB: calc((var(--lightnessSubPrimary) / 100) * 60);
  --lightnessPrimaryA: calc((var(--lightnessSubPrimary) / 100) * 80);
  --lightnessPrimary1: calc((var(--lightnessSubPrimary) / 100) * 120);
  --lightnessPrimary2: calc((var(--lightnessSubPrimary) / 100) * 140);
  --lightnessPrimary3: calc((var(--lightnessSubPrimary) / 100) * 160);
  --lightnessPrimary4: calc((var(--lightnessSubPrimary) / 100) * 180);

  /* theres no need to mess with these but you can if you want to  */
  --hueSubSecondary: calc(
    var(--hueSubPrimary) + 180
  ); /* this is set to choose a color on the opposite side of the color wheel from primary1 */
  --saturationSubSecondary: calc(var(--saturationSubPrimary) - 50%);
  --lightnessSubSecondary: var(--lightnessSubPrimary);
  /* don't mess with these*/
  --hueSecondary: calc(var(--hue) + var(--hueSubSecondary));
  --saturationSecondary: calc(
    var(--saturation) + var(--saturationSubSecondary)
  );
  --lightnessSecondary: calc(var(--lightness) + var(--lightnessSubSecondary));
  /* calculate color values for SecondaryD - Secondary4 */
  --lightnessSecondaryD: calc((var(--lightnessSubSecondary) / 100) * 20);
  --lightnessSecondaryC: calc((var(--lightnessSubSecondary) / 100) * 40);
  --lightnessSecondaryB: calc((var(--lightnessSubSecondary) / 100) * 60);
  --lightnessSecondaryA: calc((var(--lightnessSubSecondary) / 100) * 80);
  --lightnessSecondary1: calc((var(--lightnessSubSecondary) / 100) * 120);
  --lightnessSecondary2: calc((var(--lightnessSubSecondary) / 100) * 140);
  --lightnessSecondary3: calc((var(--lightnessSubSecondary) / 100) * 160);
  --lightnessSecondary4: calc((var(--lightnessSubSecondary) / 100) * 180);

  /* theres no need to mess with these but you can if you want to  */
  --hueSubTertiary: calc(
    var(--hueSubPrimary) - 30
  ); /* this is set to choose a color on the color wheel 60degrees from primary0 */
  --saturationSubTertiary: var(--saturationSubPrimary);
  --lightnessSubTertiary: var(--lightnessSubPrimary);
  /* don't mess with these*/
  --hueTertiary: calc(var(--hue) + var(--hueSubTertiary));
  --saturationTertiary: calc(var(--saturation) + var(--saturationSubTertiary));
  --lightnessTertiary: calc(var(--lightness) + var(--lightnessSubTertiary));
  /* calculate color values for TertiaryD - Tertiary4 */
  --lightnessTertiaryD: calc((var(--lightnessSubTertiary) / 100) * 20);
  --lightnessTertiaryC: calc((var(--lightnessSubTertiary) / 100) * 40);
  --lightnessTertiaryB: calc((var(--lightnessSubTertiary) / 100) * 60);
  --lightnessTertiaryA: calc((var(--lightnessSubTertiary) / 100) * 80);
  --lightnessTertiary1: calc((var(--lightnessSubTertiary) / 100) * 120);
  --lightnessTertiary2: calc((var(--lightnessSubTertiary) / 100) * 140);
  --lightnessTertiary3: calc((var(--lightnessSubTertiary) / 100) * 160);
  --lightnessTertiary4: calc((var(--lightnessSubTertiary) / 100) * 180);
  /* theres no need to mess with these but you can if you want to  */
  --hueSubQuaternary: calc(
    var(--hueSubTertiary) + 180
  ); /* this is set to choose a color on the opposite side of the color wheel from secondary0 */
  --saturationSubQuaternary: var(--saturationSubSecondary);
  --lightnessSubQuaternary: var(--lightnessSubPrimary);
  /* don't mess with these*/
  --hueQuaternary: calc(var(--hue) + var(--hueSubQuaternary));
  --saturationQuaternary: calc(
    var(--saturation) + var(--saturationSubQuaternary)
  );
  --lightnessQuaternary: calc(var(--lightness) + var(--lightnessSubQuaternary));
  /* calculate color values for QuaternaryD - Quaternary4 */
  --lightnessQuaternaryD: calc((var(--lightnessSubQuaternary) / 100) * 20);
  --lightnessQuaternaryC: calc((var(--lightnessSubQuaternary) / 100) * 40);
  --lightnessQuaternaryB: calc((var(--lightnessSubQuaternary) / 100) * 60);
  --lightnessQuaternaryA: calc((var(--lightnessSubQuaternary) / 100) * 80);
  --lightnessQuaternary1: calc((var(--lightnessSubQuaternary) / 100) * 120);
  --lightnessQuaternary2: calc((var(--lightnessSubQuaternary) / 100) * 140);
  --lightnessQuaternary3: calc((var(--lightnessSubQuaternary) / 100) * 160);
  --lightnessQuaternary4: calc((var(--lightnessSubQuaternary) / 100) * 180);

  /* these are your actual color variables */
  /* primary color variables dont mess with these but use them throughout your styles*/
  --primaryD: hsl(
    var(--huePrimary),
    var(--saturationPrimary),
    var(--lightnessPrimaryD)
  );
  --primaryC: hsl(
    var(--huePrimary),
    var(--saturationPrimary),
    var(--lightnessPrimaryC)
  );
  --primaryB: hsl(
    var(--huePrimary),
    var(--saturationPrimary),
    var(--lightnessPrimaryB)
  );
  --primaryA: hsl(
    var(--huePrimary),
    var(--saturationPrimary),
    var(--lightnessPrimaryA)
  );
  --primary0: hsl(
    var(--huePrimary),
    var(--saturationPrimary),
    var(--lightnessPrimary)
  );
  --primary1: hsl(
    var(--huePrimary),
    var(--saturationPrimary),
    var(--lightnessPrimary1)
  );
  --primary2: hsl(
    var(--huePrimary),
    var(--saturationPrimary),
    var(--lightnessPrimary2)
  );
  --primary3: hsl(
    var(--huePrimary),
    var(--saturationPrimary),
    var(--lightnessPrimary3)
  );
  --primary4: hsl(
    var(--huePrimary),
    var(--saturationPrimary),
    var(--lightnessPrimary4)
  );

  /* Secondary color variables dont mess with these but use them throughout your styles*/
  --secondaryD: hsl(
    var(--hueSecondary),
    var(--saturationSecondary),
    var(--lightnessSecondaryD)
  );
  --secondaryC: hsl(
    var(--hueSecondary),
    var(--saturationSecondary),
    var(--lightnessSecondaryC)
  );
  --secondaryB: hsl(
    var(--hueSecondary),
    var(--saturationSecondary),
    var(--lightnessSecondaryB)
  );
  --secondaryA: hsl(
    var(--hueSecondary),
    var(--saturationSecondary),
    var(--lightnessSecondaryA)
  );
  --secondary0: hsl(
    var(--hueSecondary),
    var(--saturationSecondary),
    var(--lightnessSecondary)
  );
  --secondary1: hsl(
    var(--hueSecondary),
    var(--saturationSecondary),
    var(--lightnessSecondary1)
  );
  --secondary2: hsl(
    var(--hueSecondary),
    var(--saturationSecondary),
    var(--lightnessSecondary2)
  );
  --secondary3: hsl(
    var(--hueSecondary),
    var(--saturationSecondary),
    var(--lightnessSecondary3)
  );
  --secondary4: hsl(
    var(--hueSecondary),
    var(--saturationSecondary),
    var(--lightnessSecondary4)
  );

  /* Tertiary color variables dont mess with these but use them throughout your styles*/
  --tertiaryD: hsl(
    var(--hueTertiary),
    var(--saturationTertiary),
    var(--lightnessTertiaryD)
  );
  --tertiaryC: hsl(
    var(--hueTertiary),
    var(--saturationTertiary),
    var(--lightnessTertiaryC)
  );
  --tertiaryB: hsl(
    var(--hueTertiary),
    var(--saturationTertiary),
    var(--lightnessTertiaryB)
  );
  --tertiaryA: hsl(
    var(--hueTertiary),
    var(--saturationTertiary),
    var(--lightnessTertiaryA)
  );
  --tertiary0: hsl(
    var(--hueTertiary),
    var(--saturationTertiary),
    var(--lightnessTertiary)
  );
  --tertiary1: hsl(
    var(--hueTertiary),
    var(--saturationTertiary),
    var(--lightnessTertiary1)
  );
  --tertiary2: hsl(
    var(--hueTertiary),
    var(--saturationTertiary),
    var(--lightnessTertiary2)
  );
  --tertiary3: hsl(
    var(--hueTertiary),
    var(--saturationTertiary),
    var(--lightnessTertiary3)
  );
  --tertiary4: hsl(
    var(--hueTertiary),
    var(--saturationTertiary),
    var(--lightnessTertiary4)
  );

  /* Quaternary color variables dont mess with these but use them throughout your styles*/
  --quaternaryD: hsl(
    var(--hueQuaternary),
    var(--saturationQuaternary),
    var(--lightnessQuaternaryD)
  );
  --quaternaryC: hsl(
    var(--hueQuaternary),
    var(--saturationQuaternary),
    var(--lightnessQuaternaryC)
  );
  --quaternaryB: hsl(
    var(--hueQuaternary),
    var(--saturationQuaternary),
    var(--lightnessQuaternaryB)
  );
  --quaternaryA: hsl(
    var(--hueQuaternary),
    var(--saturationQuaternary),
    var(--lightnessQuaternaryA)
  );
  --quaternary0: hsl(
    var(--hueQuaternary),
    var(--saturationQuaternary),
    var(--lightnessQuaternary)
  );
  --quaternary1: hsl(
    var(--hueQuaternary),
    var(--saturationQuaternary),
    var(--lightnessQuaternary1)
  );
  --quaternary2: hsl(
    var(--hueQuaternary),
    var(--saturationQuaternary),
    var(--lightnessQuaternary2)
  );
  --quaternary3: hsl(
    var(--hueQuaternary),
    var(--saturationQuaternary),
    var(--lightnessQuaternary3)
  );
  --quaternary4: hsl(
    var(--hueQuaternary),
    var(--saturationQuaternary),
    var(--lightnessQuaternary4)
  );

  /* neutral colors */
  --blackTrans: rgba(0, 0, 0, 0.1);
  --black: #000000;
  --neutral1: #333333;
  --neutral2: #424242;
  --neutral3: #666666;
  --neutral4: #707070;
  --neutral5: #999999;
  --neutral6: #b2b2b2;
  --neutral7: #cccccc;
  --neutral8: #efefef;
  --white: #ffffff;
  --whiteTrans: rgba(255, 255, 255, 0.5);

  /* default font variables */
  --fontFamilyCondensed: aktiv-grotesk-condensed, sans-serif;
  --fontFamilyRegular: aktiv-grotesk, sans-serif;
  --fontFamilyExtended: aktiv-grotesk-extended, sans-serif;

  --fontWeightLight: 200;
  --fontWeightRegular: 400;
  --fontWeightMedium: 700;
  --fontWeightBold: 900;
  --fontStyleNormal: normal;
  --fontColor: var(--neutral3);
  --textMargins: 0 0 var(--fontLineHeight) 0;

  /* default font styles */
  color: var(--fontColor);
  font-family: var(--fontFamilyRegular);
  font-style: var(--fontStyleNormal);
  font-weight: var(--fontWeightRegular);
  font-size: var(--fontSizeDefault);
  line-height: var(--fontLineHeight);

  /* default font sizes */
  --fontSizeDefault: 62.5%; /*set font size to 62.5% = 10px = 1em = 1rem */
  --fontSizeRatio: calc(1 + (1 / 3));
  --fontLineHeight: calc(1 + (1 / 3));
  --fontSizeH1: calc(var(--fontSizeH2) * var(--fontSizeRatio));
  --fontSizeH2: calc(var(--fontSizeH3) * var(--fontSizeRatio));
  --fontSizeH3: calc(var(--fontSizeH4) * var(--fontSizeRatio));
  --fontSizeH4: calc(var(--fontSizeH5) * var(--fontSizeRatio));
  --fontSizeH5: calc(var(--fontSizeH6) * var(--fontSizeRatio));
  --fontSizeH6: var(--fontSizeDefault);
  --fontSizeLabel: calc(var(--fontSizeDefault) / var(--fontSizeRatio));

  /* site */
  --siteBackground: var(--neutral8);
  /* default site padding */
  --sitePadding: 0;

  /* navbar height */
  --navHeight: 6em;
  --navPadding: 0 2em;

  /* shadow */
  --boxShadowOut: -3px -3px 6px var(--whiteTrans), 3px 3px 6px var(--blackTrans);
  --boxShadowIn: inset 3px 3px 6px var(--blackTrans),
    inset -3px -3px 6px var(--white);
  --textShadowOut: var(--boxShadowOut);
  --textShadowIn: var(--boxShadowIn);

  /* button */
  --buttonFontSize: 1em;
  --buttonHeight: 2rem;
  --buttonBgColor: var(--white);
  --buttonBorder: 2px solid var(--whiteTrans);
  --buttonPadding: 0.8rem 1.6rem;
  --buttonBorderRadius: 1.6em;
  --buttonShadow: var(--boxShadowOut);
}

/* dont mess with these */
html {
  font-size: var(--fontSizeDefault);
  font-weight: var(--fontWeightRegular);
  font-style: var(--fontStyleNormal);
  width: 100%;
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  font-size: 1.4em; /* in this case 1.4 em is equal to 14px */
  margin: 0;
  padding: 0;
}

body * {
  box-sizing: border-box;
}

/*              */
/* font weights */
/*              */
.font-weight-light {
  font-weight: var(--fontWeightLight);
}

.font-weight-regular {
  font-weight: var(--fontWeightRegular);
}

.font-weight-medium {
  font-weight: var(--fontMedium);
}

.font-weight-bold {
  font-weight: var(--fontWeightBold);
}

/* font widths */
.font-condensed {
  font-family: var(--fontFamilyCondensed);
}

.font-regular {
  font-family: var(--fontFamilyRegular);
}

.font-extended {
  font-family: var(--fontFamilyExtended);
}

/*         */
/* heading */
/*         */
h1,
h2,
h3,
h4,
h5,
h6 {
  margin: var(--textMargins);
  line-height: var(--fontLineHeight);
  font-family: var(--fontFamilyCondensed);
  text-transform: uppercase;
}

h1 {
  font-size: var(--fontSizeH1);
}

h2 {
  font-size: var(--fontSizeH2);
}

h3 {
  font-size: var(--fontSizeH3);
}

h4 {
  font-size: var(--fontSizeH4);
}

h5 {
  font-size: var(--fontSizeH5);
}

h6 {
  font-size: var(--fontSizeH6);
}

/* labels */
label {
  font-size: var(--fontSizeLabel);
  text-transform: uppercase;
  letter-spacing: 1px;
  font-weight: var(--fontWeightLight);
  margin-bottom: var(--fontLineHeight);
}

a {
  color: var(--fontColor);
  text-decoration: none;
}

button {
  background: var(--siteBackground);
  box-shadow: var(--boxShadowOut);
  height: 5em;
  border-radius: 2em;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 1em 3em;
  white-space: nowrap;
  text-transform: uppercase;
  letter-spacing: 1px;
  border: var(--buttonBorder);
  outline: none;
  transition: 0.2s;
}

button:hover {
  background: var(--neutral8);
  transform: scale(1.025);
  transition: 0.2s;
  box-shadow: var(--boxShadowOut);
}

button:active {
  box-shadow: var(--boxShadowIn);
}

/* text alignment */
.text-center {
  text-align: center;
}

.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

/* text colors */

.text-site-main {
  color: var(--siteBackground);
}

.text-black {
  color: var(--black);
}

.text-primary0 {
  color: var(--primary0);
}

.text-secondary0 {
  color: var(--secondary0);
}

.text-tertiary0 {
  color: var(--tertiary0);
}

.text-quaternary0 {
  color: var(--quaternary0);
}

.text-main {
  color: var(--siteBackground);
}

/* background colors */

.bg-main,
.site-bg {
  background: var(--siteBackground);
}

.bg-black {
  background: var(--black);
}

.bg-neutral1 {
  background: var(--neutral1);
}

.bg-white {
  background: var(--white);
}

.bg-primary0 {
  background: var(--primary0);
}

.bg-secondary0 {
  background: var(--secondary0);
}

.bg-tertiary0 {
  background: var(--tertiary0);
}

.bg-quaternary0 {
  background: var(--quaternary0);
}

/* box shadow */
.box-shadow-out {
  box-shadow: var(--boxShadowOut);
}

.box-shadow-in {
  box-shadow: var(--boxShadowIn);
}

/* text-shadow */
.text-shadow-out {
  text-shadow: var(--textShadowOut);
}

.text-shadow-in {
  text-shadow: var(--textShadowIn);
  text-shadow: 3px 3px 6px rgba(255, 255, 255, 0.5),
    -3px -3px 6px rgba(0, 0, 0, 0.05);
  -webkit-background-clip: text;
  -moz-background-clip: text;
  background-clip: text;
}

/* disable */
.disabled {
  opacity: 0.2;
  pointer-events: none;
}
